# Programmers 완전탐색 1. 최소 직사각형

# 시간복잡도: O(N)

def solution(sizes):
    x = []
    y = []
    
    for i in range(len(sizes)):
        w, h = sizes[i]

        if w > h:
            x.append(w)
            y.append(h)
        else:
            x.append(h)
            y.append(w)

    return max(x) * max(y)

'''
1. 반복문을 통해 명함 사이즈를 하나씩 불러온다.
2. 이때, 명함의 가로 길이(w)가 세로 길이(h)보다 언제나 크다고 가정한다.
3. 가로 길이가 세로 길이보다 크다면 x 축 길이를 담는 x 리스트에 가로 길이(w)를, y 축 길이를 담는 y 리스트에 세로 길이(h)를 담는다.
4. 반대로 세로 길이가 가로 길이보다 같거나 크다면, 명함을 90도 눕힌다는 개념으로 가로 길이와 세로 길이를 바꾸어 x 축 길이를 담는 x 리스트에 세로 길이(h)를, y 축 길이를 담는 y 리스트에 가로 길이(w)를 담는다.
5. 그리고 각각 x 축, y 축 길이를 담은 리스트에서 가장 큰 값을 꺼내어 곱해 모든 명함을 포함하는 지갑의 크기를 구한다.
'''
