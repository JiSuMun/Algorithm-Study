# 탐욕법(Greedy)
# 단속카메라
# 시간복잡도: sort => O(NlogN)
"""
1. 고속도로를 이동하는 모든 차량이 고속도로를 이용하면서 단속용 카메라를 한 번은 만나도록 카메라를 설치

2. routes에는 차량의 이동 경로가 포함
    - routes[i][0]에는 i번째 차량이 고속도로에 진입한 지점
    - routes[i][1]에는 i번째 차량이 고속도로에서 나간 지점

3. 차량의 진입/진출 지점에 카메라가 설치되어 있어도 카메라를 만난것으로 간주

4. 차량의 진입 지점, 진출 지점은 -30,000 이상 30,000 이하
    - 출구 기준 정렬해서 -30001부터 탐색 시작함
"""

def solution(routes):
    # 왼쪽부터 차례대로 확인하기 위함
    last = -30001
    cnt = 0
    # 출구 기준 오름차순 정렬 => 왼쪽부터 출구기준으로 카메라 개수 세기 위함
    routes.sort(key=lambda x:x[1])
    for i in routes:
        # 진입 지점이 설치된 마지막 카메라의 오른쪽에 있는지 확인
        if i[0] > last:
            # 오른쪽에 있는 경우는 새로운 카메라를 설치해야 하므로 카메라 수 +1
            cnt += 1
            # 마지막 카메라를 새로 설치된 마지막 카메라로 초기화
            last = i[1]
    return cnt